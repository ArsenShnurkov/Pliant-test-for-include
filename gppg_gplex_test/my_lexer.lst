
// ==========================================================================
//  GPLEX error listing for lex source file <my_lexer.lex>
// ==========================================================================
//  Version:  1.2.2
//  Machine:  sabayon
//  DateTime: 5/6/2017 2:36:36 PM
//  UserName: user
// ==========================================================================


%using Parser;           // include the namespace of the generated Parser-class
%namespace Scanner       // names the Namespace of the generated Scanner-class
%visibility public       // visibility of the types "Tokens","ScanBase","Scanner"
%scannertype Scanner     // names the Scannerclass to "Scanner"
%scanbasetype ScanBase   // names the Scanbaseclass to "ScanBase"
%tokentype Tokens        // names the Tokenenumeration to "Tokens"

%option codePage:65001
/* out:Scanner.cs */
/*see the documentation of GPLEX for further Options you can use */

%{ //user-specified code will be copied in the Output-file
%}

EOL (\r\n?)|\n
WS  [ \t]+
WORD [^ \t]+

%% //Rules Section

%{ //user-code that will be executed before getting the next token
}%
// Error: Parser error <Syntax error, unexpected }> 
// Error: Unexpected symbol, skipping to  <%}> 
// -------------------------------------------------

{EOL}         {return (int)Tokens.EOL;}
{WS}          {return (int)Tokens.WS;}
{WORD}        {yylval.sVal = yytext; return (int)Tokens.WORD;}

%{ //user-code that will be executed before return (with "finally")
	yylloc = new LexLocation(tokLin,tokCol,tokELin,tokECol)
%}
%% //User-code Section

// ==========================================================================

